---
title: "Fed Communications"
author: "Rubén Hernández Murillo"
location: "Model Risk Seminar"
date: "KeyBank — October, 2022"
institute: "Model Risk"
format: 
  revealjs:
    footer: "[rubenhm.org/talks/fedcomms](https://rubenhm.org/talks/fedcomms)"
    scrollable: false
    code-fold: true
    highlight-style: solarized
    chalkboard: 
      boardmarker-width: 5
    show-slide-number: all
    slide-number: c/t
    revealjs-plugins:
      - reveald3
    preview-links: true
from: markdown+emoji
filters:
  - pandoc/include-code-files.lua
---

## This talk

- Website: [rubenhm.org/talks/fedcomms](https://rubenhm.org/talks/fedcomms)
- GitHub repository: [github.com/rubenhm/fedcomms](https://github.com/rubenhm/fedcomms)
- Project: [github.com/rubenhm/text-similarities](https://github.com/rubenhm/text-similarities)

## Motivation

-   Fed communications are drafted strategically
-   The Fed takes into account market reactions
-   Tension between:
    -   promoting **transparency**
    -   minimizing **disruptions**
-   Goal: To be _'N-sync_ with the markets

## Fed's Monetary Policy

+ Federal Open Market Committee (FOMC)
+ FOMC Communications
  - Minutes
  - Summary of Economic Projections (SEPs)
+ Other Fed Communications
  - The Beige Book
  
## SEPs

<h3>The (infamous) dotplot</h3> 
<div class="fig-container" data-file="d3charts/dotplot.html"></div>

## SEPs

<h3>PCE Inflation</h3> 
<div class="fig-container" data-file="d3charts/fomc_pce_box.html"></div>


## Exercise

-   Calculate measures of *semantic similarity* between:
    -   the discussion on **the outlook** reported in\
        the [**Minutes**]{style="color: firebrick;"} and
    -   the discussion on **the forecasts** reported in\
        the [**Summary of Economic Projections**]{style="color: firebrick;"}.
-   The similarity measures provide a notion of the\
    **correlation of ideas** across the two documents.

## Robustness tests

-   Compare with the **Beige Book**
-   Compare with **movie reviews**

## Measures of similarity

- Cosine similarity
- Euclidean distance
- Pearson correlation

## Cosine similarity 

+ Measure of similarity between two vectors, $A$ and $B$
$$
\mathrm{cosine~similarity}~(A,B) = cos(\theta) = \frac{A \cdot B}{\lVert A \rVert \lVert B \rVert} 
$$
+ Measure ranges from $-1$ to $1$
\begin{align*}
  {\scriptsize\bullet}~ A &\perp B                    &\implies cos(\theta) &= 0 &\\ 
  {\scriptsize\bullet}~ B &= c A \mathrm{, with~} c>0 &\implies cos(\theta) &= 1 &\\
  {\scriptsize\bullet}~ B &= c A \mathrm{, with~} c<0 &\implies cos(\theta) &=-1 &\\
\end{align*}

## Code dependencies

<!-- https://github.com/ranr01/reveal-inline-svg/ -->

:::{.absolute left="10%"}
<object type="image/svg+xml" data="images/code-network.svg" width="85%">
</object>
:::

<!-- ![](images/code-network.svg){.absolute left="10%" width="80%"} -->


## Code dependencies

::::{.columns}

::: {.column width="60%" .scrollable}

``` {.makefile include="code/Makefile"}
```

:::

::: {.column width="40%" .scrollable}

![](images/code_dependencies.svg)
:::

::::


## Multiple tools and languages

![](images/Rlogo.svg){.absolute top="10%" left="5%" width="150px"}

![](images/jupyter.svg){.absolute top="10%" left="80%" width="150px"}

![](images/python.svg){.absolute top="40%" left="40%" width="150px"}

![](images/bash.svg){.absolute top="70%" left="5%" width="150px"}

![](images/google-cloud.svg){.absolute top="70%" left="80%" width="150px"}

## Download data (`R`)

-   [FOMC Minutes and SEPs](https://www.federalreserve.gov/monetarypolicy/fomchistorical2010.htm) available as `PDF` files
-   [Beige Book reports](https://www.minneapolisfed.org/region-and-community/regional-economic-indicators/beige-book-archive) available as `HTML` files
-   [Movie reviews](https://developer.nytimes.com/docs/movie-reviews-api/1/overview) available from the NYT API as `JSON` files

## Download Minutes and SEPs (`R`) 

``` {.r include="code/download_fomc_minutes.R"}
```


## Google Cloud (CLI via `Bash`)

-   Upload `PDF` files to storage bucket
-   Run each `PDF` file through the [`Vision API`](https://cloud.google.com/vision)
-   Retrieve `JSON` output

## Google Cloud (CLI via `Bash`)

``` {.bash include="code/gcompfiles.sh" code-line-numbers="|22|"}
```

## Process OCR results (`python`)

-   Read `JSON`
-   Calculate various `positional features`
-   Save as `pickle` file


## Process OCR results (`python`) {.scrollable}

<style>
    #wrap { width: 1620px; height: 1000px; padding: 0; position:relative; left:-100px; top:0px; overflow: hidden; }
    #frame { width: 1620px; height: 375px; position:relative; left:-65px; top:0px; }
    #frame { -ms-zoom: 1.5; -moz-transform: scale(1.5); -moz-transform-origin: 0px 0; -o-transform: scale(1.5); -o-transform-origin: 0 0; -webkit-transform: scale(1.5); -webkit-transform-origin: 0 0; }
</style>

<div>
<iframe id="frame" src="code/Process_ocr_results.html">
</iframe>
</div>


## Process text into sentences (`R`)

``` {.r include="code/organize_paragraphs.R"}
```



## Calculate similarity (`python`) {.scrollable}

<!-- https://stackoverflow.com/questions/166160/how-can-i-scale-the-content-of-an-iframe -->


<style>
    #wrap { width: 1620px; height: 1000px; padding: 0; position:relative; left:-100px; top:0px; overflow: hidden; }
    #frame { width: 1620px; height: 375px; position:relative; left:-65px; top:0px; }
    #frame { -ms-zoom: 1.5; -moz-transform: scale(1.5); -moz-transform-origin: 0px 0; -o-transform: scale(1.5); -o-transform-origin: 0 0; -webkit-transform: scale(1.5); -webkit-transform-origin: 0 0; }
</style>

<div>
<iframe id="frame" src="code/Calculate_similarities.html">
</iframe>
</div>


## Generate plots (`R`)

``` {.r include="code/plot_results.R"}
```



## Results, FOMC


![](images/plot_cosine_fomc.png){.absolute top="10%" left="0%" width="100%"}


## Results, Movie Reviews

![](images/plot_cosine_movies.png){.absolute top="10%" left="0%" width="100%"}



## To Do

1. Clean up code for presentation
1. Add more about the FOMC and monetary policy
1. Generate (Nicer) Charts with main results
1. Generate (Nicer) Charts with robustness results
1. Add Conclusions


