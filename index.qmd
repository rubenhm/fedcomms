---
title: "Semantic Similarity of Fed Communications"
author: "Rubén Hernández Murillo"
location: "Model Risk"
date: "KeyBank — November 10, 2022"
institute: "Model Risk Seminar"
format: 
  revealjs:
    footer: "[rubenhm.org/talks/fedcomms](https://rubenhm.org/talks/fedcomms)"
    scrollable: false
    controls: true
    code-fold: true
    css: custom.css
    highlight-style: solarized
    chalkboard: 
      boardmarker-width: 5
    show-slide-number: all
    slide-number: c/t
    width: 1100
    revealjs-plugins:
    - reveald3
    link-external-icon: true
    link-external-newwindow: true
    reference-location: margin
    self-contained: false
from: markdown+footnotes+emoji
filters:
  - pandoc/include-code-files.lua
bibliography: bibliography.bib
---

## This talk

<!-- FontAwesome -->
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.11.2/css/all.css" crossorigin="anonymous">


- Presentation website: [rubenhm.org/talks/fedcomms](https://rubenhm.org/talks/fedcomms)
- Slides repository: [github.com/rubenhm/fedcomms](https://github.com/rubenhm/fedcomms)
- Project repository: [github.com/rubenhm/text-similarities](https://github.com/rubenhm/text-similarities)

:::{.notes}
+ Thanks
+ Seminar's goals
+ First part: motivate Fed Comms
+ Second part: walk-through of code 
:::


# Part I: <br>Fed Communications

## Motivation

The Fed produces a lot of communications:

+ [Monetary policy]{.fragment fragment-index=3 .highlight-red}
+ Banking supervision and regulation
+ Financial stability
+ Payments systems
+ Economic research

##  Monetary Policy Communications

- FOMC post-meeting statement^[[✝]](#references)^
- Post-meeting press conference
- Semiannual Report to Congress by Fed Chair
- [Minutes of the FOMC meeting]{.fragment fragment-index=3 .highlight-red}
- [Summary of Economic Projections (SEP)]{.fragment fragment-index=3 .highlight-red}
- Congressional testimony by Fed governors
- Speeches by Fed governors


:::{.notes}
Communications take many forms: 

+ written publications, 
+ press releases,
+ press conferences, 
+ interviews, or 
+ speeches

Note:

+ The Fed Chair and Vice Chair are **governors**.
+ The article cited looked at the reading complexity of the _Policy Statement_.
:::

::: aside
✝ @fedles2014n23.
:::

## Other Fed Communications

- [The Beige Book](https://www.federalreserve.gov/monetarypolicy/beige-book-default.htm)^[[✝]](#references)^
- Speeches by regional bank presidents   
  <https://www.stlouisfed.org/fomcspeak>


::: aside
✝ @jmoncb2009.
:::

:::{.notes}
+ The Beige Book is a survey of anecdotal information from business contacts
+ It is written for the public at large
+ The language is non-technical
+ The article cited reported that the net _optimism_ (a measure of sentiment)
  in the report helped predict employment and gdp growth
+ Show Beige Book **website**
:::

## Minutes and SEP {.column-page}

<!-- https://pdfobject.com/static/ -->

<embed src="attachments/fomcminutes20180613.pdf"  type="application/pdf" width="85%" height="85%">
</embed>


:::{.notes}
+ The Minutes are released about 3 weeks after the FOMC Meeting
+ The FOMC members discuss _current economic conditions_, the _economic outlook_, 
  and _appropriate polciy actions_
+ The Minutes also include comments from the Board staff on 
  _financial markets_ and _economic conditions_
+ The language is non-technical
+ The SEP discuss the _economic outlook_
+ The public is most familiar with the _projection charts_
  but there is also discussion on the _economic outlook_

**Note:** 

+ Before 2020, the Minutes and SEP appeared in the same PDF file. 
+ Starting on 202, the Minutes and SEP appear in separate PDF files. 
:::

## SEP: The Dotplot

<style>
    #dotplot { width: 1400px; height: 600px; position:relative; left:15px; top:0px; }
    #dotplot { -ms-zoom: 1.2; -moz-transform: scale(1.2); -moz-transform-origin: 0px 0; -o-transform: scale(1.2); -o-transform-origin: 0 0; -webkit-transform: scale(1.2); -webkit-transform-origin: 0 0; }
</style>

<div id="dotplot" class="fig-container" data-file="d3charts/dotplot.html" width="100%"></div>

:::{.notes}
+ Highlight **diversity** of views among FOMC members
:::


## SEP: PCE Inflation

<style>
    #pce { width: 1400px; height: 600px; position:relative; left:15px; top:0px; }
    #pce { -ms-zoom: 1.2; -moz-transform: scale(1.2); -moz-transform-origin: 0px 0; -o-transform: scale(1.2); -o-transform-origin: 0 0; -webkit-transform: scale(1.2); -webkit-transform-origin: 0 0; }
</style>

<div id="pce" class="fig-container" data-file="d3charts/fomc_pce_box.html" width="100%"></div>


## FOMC Communications

- FOMC communications are drafted _strategically_
  - The Fed takes into account market reactions
- Tension between:
  - promoting [**transparency**]{.highlight-red}
  - minimizing [**disruptions**]{.highlight-red}
- Goals:
  - To be _'N-sync_ with the markets  
    (conveying that policies are _**data-driven**_)


:::{.notes}
+ The Fed has made great efforts to increase _transparency_
  + Primarily by _educating_ market participants to _anticipate policy actions_
  + This was easier before the Great Recession
    when the main policy tool was **the fed funds rate**:
    - e.g., everyone knew about the _Taylor Rule_
  + It became increasingly complicated afterwards 
    when the main policy tool was **the balance sheet**:
    - ???
:::

## Fed Communications

[Chairman Bernanke on Federal Reserve Communications](https://www.federalreserve.gov/newsevents/speech/bernanke20071114a.htm)

> [<i class="fas fa-quote-left"></i>]{style="color:gray;"} _If market participants understand that  
> arriving information about the economy  
> increases the likelihood of certain policy actions,  
> then market interest rates will tend to move   
> in a way that reinforces the expected actions,  
> effectively supporting the goals of the central bank._ [<i class="fas fa-quote-right"></i>]{style="color:gray;"}
>
:::{style="text-align:right;"}
> — Ben S. Bernanke  
> November 14, 2007
:::


# Part II: <br>Numerical Exercise


## Exercise

- Calculate measures of <span style="background-color:yellow">*semantic similarity*</span> between:
  - the discussion on [**current conditions and the outlook**]{style="color: steelblue;"} \
    reported in the [**Minutes**]{style="color: firebrick;"} and
  - the discussion on [**the forecasts**]{style="color: steelblue;"} \
    reported in the [**Summary of Economic Projections**]{style="color: firebrick;"}.
- The similarity measures provide a notion of the\
  <span style="background-color:yellow">*correlation of ideas*</span> across the two documents


## Robustness tests

- Compare with the **Beige Book**
- Compare with **movie reviews**


## Strategy

- Use _sentence embeddings_ of the documents
  - [SentenceTransformers](https://www.sbert.net/)^[[✝]](#references)^
  - [PyTorch](https://pytorch.org/) with CUDA support

- _Embedding_
  - Mapping of sentences to high-dimensional vectors  
    in an inner product space

:::{.notes}
+ `SentenceTransformers` and `PyTorch` are python libraries.
:::


::: aside
✝ @reimers-2019-sentence-bert.
:::

## Measures of similarity

- Cosine similarity
- Euclidean distance
- Pearson correlation

## Cosine similarity 

+ Measure of similarity between two vectors, $A$ and $B$

+ Cosine similarity $(A,B) = cos(\theta) = \frac{A \cdot B}{\lVert A \rVert \lVert B \rVert}$

+ Measure ranges in $[-1, 1]$
\begin{align*}
  {\scriptsize\bullet}~ A &\perp B                    &\implies cos(\theta) &= 0 &\\ 
  {\scriptsize\bullet}~ B &= c A \mathrm{, with~} c>0 &\implies cos(\theta) &= 1 &\\
  {\scriptsize\bullet}~ B &= c A \mathrm{, with~} c<0 &\implies cos(\theta) &=-1 &\\
\end{align*}


## Multiple tools and languages

![](images/Rlogo.svg "R"){.absolute top="10%" left="5%" width="150px"}

![](images/jupyter.svg "Jupyter"){.absolute top="10%" left="80%" width="150px"}

![](images/python.svg "Python"){.absolute top="40%" left="40%" width="150px"}

![](images/bash.svg "Bash"){.absolute top="70%" left="5%" width="150px"}

![](images/google-cloud.svg "Cloud"){.absolute top="70%" left="80%" width="150px"}


:::{.notes}
+ These are the tools used in the project
:::

## Multiple tools and languages

![](images/Rlogo.svg "R"){.absolute top="10%" left="5%" width="150px"}

![](images/git-logo.svg "Git"){.absolute top="10%" left="40%" width="150px"}

![](images/jupyter.svg "Jupyter"){.absolute top="10%" left="80%" width="150px"}

![](images/markdown-logo.svg "Markdown"){.absolute top="40%" left="5%" width="150px"}

![](images/python.svg "Python"){.absolute top="40%" left="40%" width="150px"}

![](images/quarto.svg "Quarto"){.absolute top="40%" left="80%" width="150px"}

![](images/bash.svg "Bash"){.absolute top="70%" left="5%" width="150px"}

![](images/d3-logo.svg "D3.js"){.absolute top="70%" left="40%" width="150px"}

![](images/google-cloud.svg "Cloud"){.absolute top="70%" left="80%" width="150px"}

:::{.notes}
+ The additional tools were used in this presentation
:::

## Code dependencies

<!-- https://github.com/ranr01/reveal-inline-svg/ -->

:::{.absolute left="10%"}

<object type="image/svg+xml" data="images/code-network.svg" width="85%"></object>

:::

<!-- ![](images/code-network.svg){.absolute left="10%" width="80%"} -->

:::{.notes}
Project organization

+ Download data
  + Data is text documents
+ Process text: clean up, break into sentences
+ Minutes/SEP have added complication: PDF source
  + two-columns
  + lots of figures
  + footnotes, headers
+ Calculate embeddings for documents, from sentences
+ Calculate correlations
+ Generate charts
+ Interpret results
:::


## Download data (`R`)

- [Movie reviews](https://developer.nytimes.com/docs/movie-reviews-api/1/overview) available from the `New York Times API` as `JSON` files
- [Beige Book reports](https://www.minneapolisfed.org/region-and-community/regional-economic-indicators/beige-book-archive) available as `HTML` files
- [FOMC Minutes and SEP](https://www.federalreserve.gov/monetarypolicy/fomchistorical2010.htm) available as `PDF` files


:::{.notes}
+ Downloading data from an API is easier than web scraping
+ Movies: API calls  
+ Minutes, SEP, Beige Book: web scraping
  + Beige Book, download html files
  + Minutes/SEP, downlad PDF files
+ API: _Application Programming Interface_
:::

## Download the Movie Reviews (`R`)

```{.r include="code/download_and_process_movies.R"}
```


:::{.notes}
+ Python environment for saving to `pickle` file
+ API Key from environmental variable 
+ `download_movies` is a wrapper function
+ The command is `jsonlite::fromJSON`
+ API entry point in `link` variable. 
+ The API call uses various **parameters**
+ Show NYT API **website**

Preparing data into sentences

+ Starts on line 128.
+ Tokenize into sentences -> words 
+ (remove stopwords, numbers) 
+ words -> back to sentences
+ Write to python pickle file.
:::


## Download the Beige Book (`R`)

```{.r include="code/download_beige_book.R"}
```

:::{.notes}
Webscraping is easy

+ Download Beige Book reports for the same dates as the Minutes/SEP
+ The Beige Book is published about 2 weeks before the FOMC meeting
+ The `url` of each report follows a pattern
+ Download entire report as an `html` file
+ Later use `CSS` selectors to extract text 
:::

## Download the Minutes and SEP (`R`) 

``` {.r include="code/download_fomc_minutes.R"}
```

:::{.notes}
Webscraping is more difficult

+ Identify links to documents by year using `CSS` selectors
+ Identify links to individual PDF files using `CSS` selectors
+ Download PDF files
+ Web scraping uses CSS selectors or XPath.

Notes

+ Downloaded Minutes/SEP as PDF files because
  early documents were PDF only
+ Used the Google Vision API because 
  early PDFs were image only, with no embedded text
:::


## Google Cloud (`Bash`)

- Upload `PDF` files to storage bucket
- Run each `PDF` file through the [`Vision API`](https://cloud.google.com/vision)
- Retrieve `JSON` output

:::{.notes}
+ Install Google Cloud CLI
+ Use in Bash script
+ Easier than using the web interface
:::

## Google Cloud (`Bash`)

``` {.bash include="code/gcompfiles.sh"}
```

:::{.notes}
Bash commands

+ `awk`
+ `sed`
+ These commands act on files or text streams
+ They are very efficient at handling large files
+ Easier than loading an entire `CSV` file into `Excel`
:::

## Process OCR results (`Python`)

- Read `JSON`
- Calculate various `positional features`
- Save as `pickle` file

:::{.notes}
+ `Pickle` is a python-specific data format.
+ Serialize/de-serialize python objects to save them to file.
:::

## Process OCR results (`Python`) {.scrollable}


<div>
<iframe class="frame-ipynb" src="code/Process_ocr_results.html">
</iframe>
</div>


:::{.notes}
+ The Google API produces JSON output
+ The main function extracts the paragraph features
+ Uses the coordinates of the bounding boxes and breaks
+ Calculates width, height, position, and size, etc.
+ Writes to a dictionary
+ Converts dictionary to CSV string
+ Write to pandas dataframe
+ Write dataframe to pickle
:::

## Process Minutes/SEP text <br>into sentences (`R`)

``` {.r include="code/organize_paragraphs.R"}
```

:::{.notes}
+ Use Position to order columns
+ Extract text, sort into Minutes and SEPs
+ Using bounding paragraphs
+ Drop text with small font size
+ Drop text with small number of characters
+ Break into sentences
+ Remove stop words
:::

## Process Beige Book text <br>into sentences (`R`)

``` {.r include="code/organize_beige_book.R"}
```

:::{.notes}
+ Use `CSS` selectors to extract text
+ Use `regex` to clean up date
+ Break into sentences
+ Remove stop words
:::

## Calculate similarity (`Python`) {.scrollable}


<div>
<iframe class="frame-ipynb" src="code/Calculate_similarities.html">
</iframe>
</div>


:::{.notes}
+ Use library to embed sentences
+ Average across sentences in document to embed entire document
+ Calculate similarity with pairs of documents
+ Use CUDA for parallel processing
+ Save to pickle file
:::


## Generate plots (`R`)

``` {.r include="code/plot_results.R"}
```

:::{.notes}
+ Can use system python executable, no need for Anaconda
+ Python is used only for reading pickle files
+ `ggplot` is a nice library for charts in `R`
+ Alternative in python: `seaborn` or `matplotlib`
:::

## Results, FOMC


![](images/plot_cosine_fomc.png){.absolute top="10%" left="0%" width="100%"}


:::{.notes}
Highlights

+ High correlation (in excess of 60%)
+ Highest correlation between Minutes and SEP
+ Then Minutes and Beige Book
+ Finally SEP and Beige Book
+ Break indicates a change in the Beige Book format
:::

## Results, Movie Reviews

![](images/plot_cosine_movies.png){.absolute top="10%" left="0%" width="100%"}

:::{.notes}
Highlights

+ Low correlation (less than 50%)
+ Highest for Beige Book and Movies
+ They both use more colloquial language
+ Minutes and SEP have more technical language
:::


## Discussion 


+ Minutes and SEP are very _similar_
+ The Beige Book is more similar to the Minutes than to the SEP:
  - The Beige Book reports on **current conditions**
  - The Minutes discusses both   
    **current conditions** and **the outlook**
  - The SEP discusses only **forecasts** (i.e. the outlook)


## Discussion (contd)

The Beige Book changed format in 2017

- More concise
- More standardized
- Similar themes as the FOMC meeting
- Less colloquial 


# Conclusion

<!-- :::{.bigsection}
::: -->

## Takeaways

+ The Minutes and SEP are different animals
  + The SEP is a complex document 
  + The Minutes are more readable
+ It is interesting they are _semantically similar_
  + But perhaps not surprising
+ The Beige Book is still my favorite

## Additional applications

- banking- and finance-specific embeddings 
- financial news and forecasting
- sentiment analysis of financial reports

:::{.notes}
+ If you find any of the topics reviewed today interesting
+ Or if you think any of tools or techniques might be useful 
  in a project
+ Let me know, we could have a conversation afterwards
:::


## References

:::{#refs}

:::

:::{.notes}
+ Previous works on Fed Communications
+ There have been lots of advances in the literature
+ e.g., using audio and machine learning to 
  extract sentiment from speech recordings
:::
